"""
    Generated by "django-admin startproject" using Django 4.2.8 and customized.
"""

import os
from pathlib import Path
from decouple import config
from datetime import timedelta
from django.utils.translation import gettext_lazy as _




#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######                  ROOT CONFIGS               #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = config("SECRET_KEY", cast=str)
ROOT_URLCONF = "blogger_api.urls"
WSGI_APPLICATION = "blogger_api.wsgi.application"
DEBUG = True
SITE_ID = 1
INTERNAL_IPS = ["127.0.0.1"]
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
ALLOWED_HOSTS = ["localhost", "127.0.0.1"]
ADMINS = [
    ("Admin Full Name", "admin@example.com"),
]


# Below are custom configs for this project
SITE_NAME = "Django Blogger API" # Name of the website to be displayed
SITE_EMAIL_ADDRESS = "info@example.com"
DJANGO_ADMIN_PAGE_URL = "admin"  # Django Admin page URL
API_CURRENT_VERSION: str = "1.0"






#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######       INSTALLED APPLICATIONS DEFINITION     #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres", # Added
    "django.contrib.admindocs", # Docuementation of models fields in admin page
    
    
    # 3rd PARTY APPS
    "storages",
    "drf_yasg",
    "easyaudit",
    "corsheaders",
    "import_export",
    "django_filters",
    "rest_framework",
    "django_countries",
    "phonenumber_field",
    "django_summernote",
    "django_browser_reload",
    "rest_framework.authtoken",
    "rest_framework_simplejwt.token_blacklist",
    
    
    # LOCALE APPS
    "accounts.apps.AccountsConfig",
    "blog.apps.BlogConfig",
    "contact.apps.ContactConfig",
    "core.apps.CoreConfig",
    "docs.apps.DocsConfig",
    "newsletter.apps.NewsletterConfig",
]








#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######             MIDDLEWARES                     #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # Serving static files
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware", # Added. Translation
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.contrib.admindocs.middleware.XViewMiddleware", # Docuementation of models fields in admin page
    
    "corsheaders.middleware.CorsMiddleware", # Corsheaders
    "easyaudit.middleware.easyaudit.EasyAuditMiddleware", # Easy Audit
    "django_browser_reload.middleware.BrowserReloadMiddleware", # Django Browser Reload
]







#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######                 TEMPLATES                   #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                
                # Custom context processors
                "blogger_api.context_processors.global_context",
            ],
        },
    },
]









#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######               DATABASES                     #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        "ENGINE": config("DB_ENGINE", cast=str),
        "HOST": config("DB_HOST", cast=str),
        "USER": config("DB_USER", cast=str),
        "PORT": config("DB_PORT", cast=int),
        "NAME": config("DB_NAME", cast=str),
        "PASSWORD": config("DB_PASSWORD", cast=str)
    }
}

AUTH_USER_MODEL = "accounts.User"








#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######             PASSWORD VALIDATORS             #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]








#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######             INTERNATIONALIZATION            #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
LANGUAGE_CODE = "en"
TIME_ZONE = "UTC"
USE_I18N = True
USE_L10N = True
USE_TZ = True


LOCALE_PATHS = [os.path.join(BASE_DIR, "locale"),]
LANGUAGES = [
    ("fr", _("Fran√ßais")),
    ("en", _("Anglais")),
]






#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######          STATIC & MEDIA FILES CONFIGS       #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "collectstatic/")

MEDIA_URL = "uploads/"
MEDIA_ROOT = os.path.join(BASE_DIR, "mediafiles/uploads")

# DEFAULT_FILE_STORAGE = config("DEFAULT_FILE_STORAGE", cast=str) # Use in production only

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static/")]
STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"










#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######                  EMAIL CONFIGS              #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
EMAIL_BACKEND = "blogger_api.email_services.DevEmailBackend" # Only in Dev mode

# EMAIL_BACKEND = config("EMAIL_BACKEND", cast=str)
EMAIL_HOST = config("EMAIL_HOST", cast=str)
EMAIL_PORT = config("EMAIL_PORT", cast=int)
EMAIL_USE_TLS = config("EMAIL_USE_TLS", cast=bool)
EMAIL_HOST_USER = config("EMAIL_HOST_USER", cast=str)
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD", cast=str)
EMAIL_USE_LOCALTIME = config("EMAIL_USE_LOCALTIME", cast=bool)
DEFAULT_FROM_EMAIL = f"{SITE_NAME} <{EMAIL_HOST_USER}>"
SERVER_EMAIL = _(f"Server Error - {SITE_NAME} <{EMAIL_HOST_USER}>")









#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######                  CACHES CONFIGS             #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "Caches",
    }
}
CACHE_MIDDLEWARE_ALIAS = "default"
CACHE_MIDDLEWARE_SECONDS = 60 * 10 # 10 mins








#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######                 SESSIONS CONFIGS            #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
SESSION_CACHE_ALIAS = "default"
SESSION_COOKIE_AGE = 604800 # One week
SESSION_COOKIE_HTTPONLY = False
SESSION_COOKIE_NAME = "sessionid"
SESSION_COOKIE_SECURE = False
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = False
# SESSION_COOKIE_SECURE = True # Use only in production






#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######      HTTPS CONFIGS (only in production)     #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################
# SECURE_HSTS_SECONDS = 60
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True
# SECURE_SSL_REDIRECT = True
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
# SECURE_CROSS_ORIGIN_OPENER_POLICY = "same-origin-allow-popups"






#############################################################
#############################################################
#############################################################
#######                                             #########
#######                                             #########
#######           3rd PARTY APPS CONFIGS            #########
#######                                             #########
#######                                             #########
#############################################################
#############################################################
#############################################################


#############################################################
#############################################################
########         DJANGO EASY EDIT CONFIGS        ############
#############################################################
#############################################################
DJANGO_EASY_AUDIT_WATCH_REQUEST_EVENTS = True # (Intercept requests events)
DJANGO_EASY_AUDIT_WATCH_MODEL_EVENTS = True # (Intercept CRUD events)
DJANGO_EASY_AUDIT_WATCH_AUTH_EVENTS = True # (Intercept Login events)




#############################################################
#############################################################
########            SUMMERNOTE CONFIGS           ############
#############################################################
#############################################################
SUMMERNOTE_THEME = "bs4"
SUMMERNOTE_CONFIG = {
    "airMode": True,
    "tabsize": 2,
    "height": 300,
    "width": "100%",
    "focus": True,
    "attachment_require_authentication": True, # Require users to be authenticated for uploading attachments.
    "attachment_absolute_uri": True,
    "lang": None,
    "toolbar": [
        ["style", ["style"]],
        ["font", ["bold", "underline", "clear"]],
        # ["color", ["color"]],
        ["para", ["ul", "ol", "paragraph"]],
        ["table", ["table"]],
        ["insert", ["link", "picture"]],
        ["view", ["fullscreen", "help"]]
    ],
}





#############################################################
#############################################################
########            DRF YASG CONFIGS             ############
#############################################################
#############################################################
SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "Basic": {
            "type": "basic"
        },
        'Bearer': {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "VALIDATOR_URL": None, # Comment it to see if swagger schema is valid or not
    "EXCLUDED_MEDIA_TYPES": ["html"],
    "USE_SESSION_AUTH": True,
    "DISPLAY_OPERATION_ID": True,
}

REDOC_SETTINGS = {
    "NATIVE_SCROLLBARS": True,
}





#############################################################
#############################################################
########           SIMPLE JWT CONFIGS            ############
#############################################################
#############################################################
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=90),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "VERIFYING_KEY": None,
    "AUDIENCE": None,
    "ISSUER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ["rest_framework_simplejwt.tokens.AccessToken"],
    "TOKEN_TYPE_CLAIM": "token_type",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),
}





#############################################################
#############################################################
########         CORS ORIGINS CONFIGS            ############
#############################################################
#############################################################
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = False
#CORS_ORIGIN_WHITELIST = []





#############################################################
#############################################################
########         REST FRAMEWORK CONFIGS          ############
#############################################################
#############################################################
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
        "rest_framework.permissions.IsAuthenticated",
        "rest_framework.permissions.IsAdminUser",
        "blogger_api.permissions.IsNotAuthenticated",
        "blogger_api.permissions.IsStaff",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 100, # By default (Override it with "limit" query param)
}
